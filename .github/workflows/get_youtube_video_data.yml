name: Fetch YouTube Playlist Data

on:
  workflow_dispatch:
    inputs:
      youtube_link:
        description: "YouTube Playlist ID"
        required: true
        type: string

jobs:
  youtube-port:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Fetch YouTube Data
      - name: Fetch YouTube Playlist Data
        id: fetch
        run: |
          curl -s "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet,contentDetails&maxResults=50&playlistId=${{ github.event.inputs.youtube_link }}&key=${{ secrets.YOUTUBE_API_KEY }}" \
            -o youtube_response.json

      # Step 3: Log YouTube API Response
      - name: Log YouTube API Response
        run: |
          echo "YouTube API Response:"
          cat youtube_response.json

      # Step 4: Prepare Payload for Port
      - name: Prepare Payload
        id: prepare_payload
        run: |
          jq -n --argjson items "$(cat youtube_response.json | jq '.items[]')" '{
            blueprint: "youtube_data",
            operation: "create",
            filter: "true",
            entity: {
              identifier: $items.snippet.resourceId.videoId,
              title: $items.snippet.title,
              properties: {
                youtube_video_name: $items.snippet.title,
                youtube_account: $items.snippet.channelTitle,
                youtube_uploaded_on: $items.snippet.publishedAt,
                youtube_views: $items.statistics.viewCount,
                youtube_comments: $items.statistics.commentCount,
                youtube_video_url: ("https://www.youtube.com/watch?v=" + $items.snippet.resourceId.videoId)
              }
            }
          }' > port_payload.json

      # Step 5: Log Prepared Payload
      - name: Log Prepared Payload
        run: |
          echo "Prepared Payload:"
          cat port_payload.json

      # Step 6: Send Data to Port
      - name: Send to Port
        id: port_call
        run: |
          response=$(curl -s -o response_log.txt -w "%{http_code}" -X POST \
            -H "Content-Type: application/json" \
            -d @port_payload.json \
            https://app.getport.io/api/v1/ingest)
          echo "Port Response Code: $response"
          echo "Port Response Body:"
          cat response_log.txt

      # Step 7: Check Port Response
      - name: Verify Port Response
        if: failure()
        run: |
          echo "Error: Check Port response logs for more details."
          exit 1
